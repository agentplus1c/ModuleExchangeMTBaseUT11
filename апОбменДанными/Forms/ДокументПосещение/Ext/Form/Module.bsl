
#Область ГлобальныеПеременные

&НаКлиенте
Перем МодульМТ;  // Общий клиентский модуль со спецификой мобильной торговли

// ГлобальныеПеременные
#КонецОбласти


#Область СовместимостьСПлатформой_8_3_5

// Подставляет параметры в строку. Максимально возможное число параметров - 5.
// Параметры в строке задаются как %<номер параметра>. Нумерация параметров начинается с единицы.
//
// Параметры:
//  СтрокаПодстановки  - Строка - шаблон строки с параметрами (вхождениями вида "%ИмяПараметра");
//  Параметр<n>        - Строка - подставляемый параметр.
//
// Возвращаемое значение:
//  Строка   - текстовая строка с подставленными параметрами.
//
&НаКлиентеНаСервереБезКонтекста
Функция СтрШаблон_(СтрокаПодстановки,
	Параметр1, Параметр2 = Неопределено, Параметр3 = Неопределено, Параметр4 = Неопределено, Параметр5 = Неопределено)
	
	Результат = СтрЗаменить(СтрокаПодстановки, "%1", Параметр1);
	Результат = СтрЗаменить(Результат, "%2", Параметр2);
	Результат = СтрЗаменить(Результат, "%3", Параметр3);
	Результат = СтрЗаменить(Результат, "%4", Параметр4);
	Результат = СтрЗаменить(Результат, "%5", Параметр5);
	
	Возврат Результат;
	
КонецФункции

// СовместимостьСПлатформой_8_3_5
#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	
	ТекОбъект.КонтекстФормыИнициализировать(СтррКонтекст, Параметры, "ID");
	ТекОбъект.ВОКонтекстФормыДополнить(СтррКонтекст, "_Посещение", Ложь);	
	ПрочестьОбъектИзХранилища(Параметры.ID);
	
	ТекОбъект.ВОПриСозданииФормыЭлемента(ЭтотОбъект);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Загружаем общий клиентский модуль "МодульОбщийМТ". В параметре "Параметры" важно передавать структуру с заполненным
	// свойством "ВХОбщиеПараметры" - оно используется для предотвращения повторной загрузки текущей обработки.
	МодульМТ = ПолучитьФорму(СтррКонтекст.ПутьКФорме + "МодульОбщийМТ", СтррКонтекст, ЭтаФорма, "АгентПлюсМодульОбщийМТ"); // в СтррКонтекст есть заполненное свойство "ВХОбщиеПараметры"
	МодульМТ.ВОПриОткрытии(ЭтотОбъект);
	
	ФормаОбновитьЗаголовок();
	ФормаОбновитьВидимостьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЭтаФорма.Модифицированность Тогда
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения("СохранитьПродолжить", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Данные были изменены. Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

// ОбработчикиСобытийФормы
#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаВыполнить(Команда)
	
	МодульМТ.КомандаВыполнить(Команда, ЭтотОбъект)
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСохранить(Команда)
	
	СохранитьОбъектВХранилищеКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПровестиИЗакрыть(Команда)
	
	СохранитьОбъектВХранилищеКлиент(СтррКонтекст.КодыИконок.Проведен); // признак Проведен
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПровести(Команда)
	
	СохранитьОбъектВХранилищеКлиент(1); // признак Проведен
	
КонецПроцедуры

// ОбработчикиКомандФормы
#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	
	МодульМТ.ПартнерПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	МодульМТ.КонтрагентПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НомерПриИзменении(Элемент)
	
	УстановитьМодифицированостьФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	УстановитьМодифицированостьФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Оповещение = Новый ОписаниеОповещения("КонтрагентНачалоВыбораЗавершение", ЭтотОбъект);
	стррПараметры = ?(ЗначениеЗаполнено(Партнер), Новый Структура("Отбор", Новый Структура("Партнер", Партнер)), Неопределено);
	ОткрытьФорму("Справочник.Контрагенты.ФормаВыбора", стррПараметры,,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	МодульМТ.КонтрагентНачалоВыбораЗавершение(ЭтотОбъект, Результат, ДополнительныеПараметры);

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	МодульМТ.ОрганизацияПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементФормыПриИзменении(Элемент)
	
	УстановитьМодифицированостьФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатПосещения_ПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтррПараметры  = Новый Структура("ID,ДляВыбора", РезультатПосещения, Истина);
	Оповещение = Новый ОписаниеОповещения("РезультатПосещения_ПредставлениеВыборЗавершение", ЭтотОбъект, Неопределено);
	
	МодульМТ.ОткрытьФормуОбработки("СправочникРезультатыПосещений", СтррПараметры, ЭтаФорма.КлючУникальности, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатПосещения_ПредставлениеВыборЗавершение(стррРезультат, ДополнительныеПараметры) Экспорт
	
	Если стррРезультат = Неопределено Тогда
		Возврат;
	Иначе
		РезультатПосещения = стррРезультат.ID;
		РезультатПосещения_Представление = стррРезультат.Наименование;
		УстановитьМодифицированостьФормы();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатПосещения_ПредставлениеОчистка(Элемент, СтандартнаяОбработка)
	
	УстановитьМодифицированостьФормы();
	РезультатПосещения = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатПосещения_ПредставлениеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	МодульМТ.ВООткрытьФорму("_РезультатыПосещений", РезультатПосещения);
	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовФормы_РеквизитыМТ

&НаКлиенте
Процедура ИнфоМТВремяСозданияНажатие(Элемент, СтандартнаяОбработка)
	
	МодульМТ.РеквизитМТПриНажатииСсылки(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементМТСведенияНажатие(Элемент)
	
	стррРезультат = МодульМТ.РеквизитМТПриНажатииСсылки(ЭтотОбъект, Элемент);
	Если ТипЗнч(стррРезультат) = Тип("Структура") Тогда // нужно показать выбор из меню
	  	ПоказатьВыборИзМеню(стррРезультат.Оповещение, стррРезультат.Меню, Элемент);
	КонецЕсли; 
	
КонецПроцедуры

// ОбработчикиСобытийЭлементовФормы_РеквизитыМТ
#КонецОбласти

// ОбработчикиСобытийЭлементовФормы
#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область СлужебныеПроцедурыИФункции_Хранилище

// Процедура считывает объект (документ) из хранилища значений.
&НаСервере
Процедура ПрочестьОбъектИзХранилища(КлючID) 
	
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	
	ID = КлючID;
	стррОбъект = ТекОбъект.ВОЭлементЗагрузить(СтррКонтекст.ВО, ID);
	
	Если стррОбъект = Неопределено Тогда // создание нового документа, заполняем документ значениями по умолчанию

	Иначе
		ТекОбъект.ЗаполнитьРеквизитыОбъектаИзСтруктуры(ЭтотОбъект, стррОбъект);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Функция СохранитьОбъектВХранилищеКлиент(НовыйСтатус = Неопределено)
	
	МодульМТ.ВОПередЗаписьюЭлемента(ЭтотОбъект, НовыйСтатус);
	
	СохранитьОбъектВХранилище();
	УстановитьМодифицированостьФормы(Ложь);
	Оповестить("АПДокументЗаписан_" + СтррКонтекст.ВО.ВидОбъекта, ID);
	
	Возврат Истина;
	
КонецФункции

// Процедура сохраняет объект (документ) в хранилище значений.
&НаСервере
Процедура СохранитьОбъектВХранилище()
	
	стрРеквизитыШапкиОсн = "Статус,Дата,Номер,ВремяНачала,ВремяОкончания,Широта,Долгота,АдресПоГеокодеру,Менеджер,Комментарий";
	стрРеквизитыШапкиДоп = "Партнер,Контрагент,Организация,РезультатПосещения,РезультатПосещения_Представление";
	стррОбъект = Новый Структура(стрРеквизитыШапкиОсн + "," + стрРеквизитыШапкиДоп); // сохраняемые реквизиты объекта
	ЗаполнитьЗначенияСвойств(СтррОбъект, ЭтаФорма);
	
	РеквизитФормыВЗначение("Объект").ВОЭлементСохранить(СтррКонтекст.ВО, ID, стррОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПродолжить(РезультатОтвета, ДополнительныеПараметры) Экспорт
	
	Если РезультатОтвета = КодВозвратаДиалога.Да Тогда
		Если СохранитьОбъектВХранилищеКлиент() Тогда
			Закрыть();
		КонецЕсли; 
	ИначеЕсли РезультатОтвета = КодВозвратаДиалога.Нет Тогда
		УстановитьМодифицированостьФормы(Ложь);
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

// СлужебныеПроцедурыИФункции_Хранилище
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции_РаботаСФормой

&НаКлиенте
Процедура ФормаОбновитьВидимостьЭлементов()
	
	МодульМТ.ФормаСведенияИзМТОбновить(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ФормаОбновитьЗаголовок()
	
	ВсегоСтрок = Товары.Количество();
	
	Если Не ЗначениеЗаполнено(РезультатПосещения_Представление) Тогда
		ЭтаФорма.Заголовок = НСтр("ru = 'Посещение'");	
	Иначе
		ЭтаФорма.Заголовок = СтрШаблон_(НСтр("ru = 'Посещение (Результат: %1)'"), Формат(РезультатПосещения_Представление, "ЧДЦ=2"));
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьМодифицированостьФормы(Режим = Истина) Экспорт
	
	ЭтаФорма.Модифицированность = Режим;
	Элементы.Сохранить.ЦветТекста = СтррКонтекст.Цвета[?(Режим, "ТекстВнимание", "Авто")];
	
КонецПроцедуры

// СлужебныеПроцедурыИФункции_РаботаСФормой
#КонецОбласти 

// СлужебныеПроцедурыИФункции
#КонецОбласти 
